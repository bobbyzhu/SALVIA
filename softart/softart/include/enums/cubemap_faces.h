/**************************
NEVER CHANGE THIS FILE MANUALLY!

This File Was Generated By enums_gen.py Automatically.
************************/

#ifndef SOFTART_ENUMS_CUBEMAP_FACES_H
#define SOFTART_ENUMS_CUBEMAP_FACES_H

#ifdef _DEBUG
#include <set>
#endif

class cubemap_faces{

#ifdef _DEBUG
	static std::set<int>& get_cubemap_faces_table();
#endif
	int val;
	explicit cubemap_faces(int v);
	
public:
	static cubemap_faces cast(int val);
	
	cubemap_faces(const cubemap_faces& rhs):val(rhs.val){}
	
	cubemap_faces& operator =(const cubemap_faces& rhs){ val=rhs.val; }
	
	operator int(){ return val; }
	
	friend inline bool operator == (const cubemap_faces& lhs, const cubemap_faces& rhs)
	{ return lhs.val == rhs.val; }
	
	friend inline bool operator != (const cubemap_faces& lhs, const cubemap_faces& rhs)
	{ return lhs.val != rhs.val; }
	
	static const cubemap_faces invalid;
	static const cubemap_faces pos_x;
	static const cubemap_faces neg_x;
	static const cubemap_faces pos_y;
	static const cubemap_faces neg_y;
	static const cubemap_faces pos_z;
	static const cubemap_faces neg_z;
	static const cubemap_faces max;
};

template<class T> T enum_cast(int val);

template<> inline cubemap_faces enum_cast<cubemap_faces>(int val){
	return cubemap_faces::cast(val);
}

#endif