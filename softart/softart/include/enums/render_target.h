/**************************
NEVER CHANGE THIS FILE MANUALLY!

This File Was Generated By enums_gen.py Automatically.
************************/

#ifndef SOFTART_ENUMS_RENDER_TARGET_H
#define SOFTART_ENUMS_RENDER_TARGET_H

#ifdef _DEBUG
#include <set>
#endif

class render_target{

#ifdef _DEBUG
	static std::set<int>& get_render_target_table();
#endif
	int val;
	explicit render_target(int v);
	
public:
	static render_target cast(int val);
	
	render_target(const render_target& rhs):val(rhs.val){}
	
	render_target& operator =(const render_target& rhs){ val=rhs.val; }
	
	operator int(){ return val; }
	
	friend inline bool operator == (const render_target& lhs, const render_target& rhs)
	{ return lhs.val == rhs.val; }
	
	friend inline bool operator != (const render_target& lhs, const render_target& rhs)
	{ return lhs.val != rhs.val; }
	
	static const render_target invalid;
	static const render_target color;
	static const render_target depth;
	static const render_target stencil;
	static const render_target max;
};

template<class T> T enum_cast(int val);

template<> inline render_target enum_cast<render_target>(int val){
	return render_target::cast(val);
}

#endif